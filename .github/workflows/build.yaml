name: Build

on:
  schedule:
    - cron: "0 10 * * *"
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"

jobs:

    build-docker:
        name: Build Docker
        runs-on: ubuntu-latest

        env:
            AWS_REGION: us-east-1
            AWS_ACCOUNT_ID: 350019335931
            DOCKER_IMAGE: terrastate

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ env.AWS_REGION }}

            - name: Login to ECR
              uses: docker/login-action@v3
              with:
                registry: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                images: |
                    ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.DOCKER_IMAGE }}
                tags: |
                    type=schedule
                    type=sha,prefix={{branch}}-
                    type=semver,pattern={{version}}
                    type=semver,pattern={{major}}.{{minor}}
                    type=semver,pattern={{major}}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
      
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
      
            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                push: ${{ github.event_name != 'pull_request' }}
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
                build-args: |
                    VERSION=${{ steps.meta.outputs.version }}
                    GIT_SHA=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
                    BUILD_TIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
